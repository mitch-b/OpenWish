@attribute [Authorize]
@page "/wishlists"

@using Microsoft.Extensions.Logging
@using OpenWish.Application.Services
@using OpenWish.Data.Entities
@using OpenWish.Web.Services
@using OpenWish.Web.Components.Wishlist

@inject IWishlistService WishlistService
@inject NavigationManager NavigationManager
@inject ILogger<Index> Logger
@inject IUserContextService UserContextService

@rendermode InteractiveServer

<h3>My Wishlists</h3>

<div class="mb-3">
    <a href="/wishlists/new" class="btn btn-primary">Create New Wishlist</a>
</div>

@if (wishlists == null)
{
    <p>Loading...</p>
}
else if (!wishlists.Any())
{
    <p>No wishlists found. Create one to get started!</p>
}
else
{
    <div class="row">
        @foreach (var wishlist in wishlists)
        {
            <div class="col-md-4 mb-4">
                <WishlistCard Wishlist="@wishlist" OnDelete="@HandleWishlistDeleted" />
            </div>
        }
    </div>
}

@code {
    private IEnumerable<Wishlist>? wishlists;
    private string? _userId;

    protected override async Task OnInitializedAsync()
    {
        _userId = await UserContextService.GetUserIdAsync();
        await LoadWishlists();
    }

    private async Task LoadWishlists()
    {
        if (!string.IsNullOrWhiteSpace(_userId))
        {
            wishlists = await WishlistService.GetUserWishlistsAsync(_userId);
        }
    }

    private async Task HandleWishlistDeleted(Wishlist wishlist)
    {
        await LoadWishlists();
    }
}
