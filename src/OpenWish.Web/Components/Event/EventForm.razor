
<EditForm Enhance Model="@Model" OnValidSubmit="@HandleSubmit" FormName="EventForm">
    <DataAnnotationsValidator />

    @if (ShowValidationSummary)
    {
        <ValidationSummary class="alert alert-danger" />
    }

    <div class="mb-4">
        <label for="name" class="form-label fw-bold">Event Name</label>
        <InputText id="name" class="form-control form-control-lg" placeholder="Enter event name" @bind-Value="@Model!.Name" />
        <div class="form-text">Choose a descriptive name for your event</div>
        <ValidationMessage For="@(() => Model.Name)" class="text-danger" />
    </div>

    <div class="mb-4">
        <label for="description" class="form-label fw-bold">Description</label>
        <InputTextArea id="description" class="form-control" rows="3" 
            placeholder="Describe your event" @bind-Value="@Model!.Description" />
        <div class="form-text">Add details about the event to help your guests</div>
        <ValidationMessage For="@(() => Model.Description)" class="text-danger" />
    </div>

    <div class="row mb-4">
        <div class="col-md-6">
            <label for="date" class="form-label fw-bold">Event Date</label>
            <InputDate id="date" class="form-control" @bind-Value="@Model!.Date" />
            <ValidationMessage For="@(() => Model.Date)" class="text-danger" />
        </div>
        <div class="col-md-6">
            <label for="budget" class="form-label fw-bold">Budget</label>
            <InputNumber id="budget" class="form-control" placeholder="$0.00" @bind-Value="@Model!.Budget" />
            <div class="form-text">Optional: Set a suggested gift budget</div>
            <ValidationMessage For="@(() => Model.Budget)" class="text-danger" />
        </div>
    </div>

    <div class="mb-4">
        <div class="form-check">
            <InputCheckbox id="isGiftExchange" class="form-check-input" @bind-Value="@Model!.IsGiftExchange" />
            <label class="form-check-label" for="isGiftExchange">
                Enable Gift Exchange
            </label>
        </div>
        <div class="form-text">Turn this on if you want to organize a Secret Santa or similar gift exchange</div>
        <ValidationMessage For="@(() => Model.IsGiftExchange)" class="text-danger" />
    </div>

    <div class="d-grid gap-2">
        <button type="submit" class="btn btn-primary btn-lg">
            @if (_isEditMode)
            {
                <span>Save Changes</span>
            }
            else
            {
                <span class="me-2">âœ¨</span> <span>Create Event</span>
            }
        </button>
    </div>
</EditForm>

@code {
    [Parameter] public EventModel? Model { get; set; }
    [Parameter] public EventCallback<EventModel> OnSubmit { get; set; }
    [Parameter] public bool ShowValidationSummary { get; set; }

    private bool _isEditMode => Model?.Id > 0;

    private async Task HandleSubmit()
    {
        if (OnSubmit.HasDelegate)
        {
            await OnSubmit.InvokeAsync(Model);
        }
    }
}
